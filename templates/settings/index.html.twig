{% extends 'home/home.html.twig' %}

{% block title %}{{ 'settings'|trans }} - Eventora{% endblock %}

{% block stylesheets %}
    <style>
        :root {
            --primary-color: #934D1A;
            --secondary-color: #BE6C2A;
            --text-color: #1f2937;
            --bg-color: #f9fafb;
            --sidebar-bg: #ffffff;
            --border-color: #e5e7eb;
            --error-color: #dc2626;
            --success-color: #16a34a;
        }

        .settings-wrapper {
            display: flex;
            min-height: 100vh;
            background-color: var(--bg-color);
            font-family: 'Inter', sans-serif;
        }

        /* Sidebar */
        .sidebar {
            width: 300px;
            background-color: var(--sidebar-bg);
            padding: 2.5rem 2rem;
            box-shadow: 2px 0 8px rgba(0, 0, 0, 0.1);
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            overflow-y: auto;
            transition: width 0.3s ease;
        }

        .sidebar h2 {
            font-size: 1.75rem;
            color: var(--text-color);
            margin-bottom: 2.5rem;
            font-weight: 600;
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
        }

        .sidebar li {
            margin-bottom: 1.25rem;
            position: relative;
            opacity: 0;
            transform: translateX(-20px);
            animation: slideIn 0.5s ease forwards;
            animation-delay: calc(var(--index) * 0.1s);
        }

        @keyframes slideIn {
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .sidebar li a {
            display: block;
            padding: 1rem 1.25rem;
            color: var(--text-color);
            text-decoration: none;
            font-size: 1.1rem;
            border-radius: 6px;
            transition: background-color 0.3s ease, color 0.3s ease, transform 0.2s ease;
        }

        .sidebar li a:hover {
            background-color: #BE6C2A;
            color: #ffffff;
            transform: translateX(5px);
        }

        .sidebar li.active a {
            background-color: #934D1A;
            color: #ffffff;
            font-weight: 500;
        }

        .language-menu .language-toggle {
            cursor: pointer;
        }

        .language-submenu {
            display: none;
            padding-left: 1.5rem;
            margin-top: 0.5rem;
            opacity: 0;
            transform: translateY(-10px);
            transition: opacity 0.3s ease, transform 0.3s ease;
        }

        .language-submenu.active {
            display: block;
            opacity: 1;
            transform: translateY(0);
        }

        .language-submenu a {
            font-size: 1rem;
            padding: 0.75rem 1.25rem;
        }

        .help-item.hidden {
            display: none;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            padding: 2.5rem;
            max-width: 900px;
            margin-left: 340px;
            margin-right: 2rem;
        }

        .main-content h1 {
            font-size: 2.25rem;
            color: var(--text-color);
            margin-bottom: 2.5rem;
            font-weight: 700;
        }

        .alert-success,
        .alert-error {
            padding: 1.25rem;
            margin-bottom: 1.25rem;
            border-radius: 6px;
            font-size: 1rem;
        }

        .alert-success {
            background-color: var(--success-color);
            color: #ffffff;
        }

        .alert-error {
            background-color: var(--error-color);
            color: #ffffff;
        }

        /* Settings Sections */
        .settings-section {
            background-color: #ffffff;
            padding: 2rem;
            border-radius: 8px;
            margin-bottom: 2.5rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            opacity: 0;
            transform: translateY(20px);
            animation: fadeInUp 0.6s ease forwards;
            animation-delay: calc(var(--index) * 0.2s);
        }

        @keyframes fadeInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .settings-section h3 {
            font-size: 1.5rem;
            color: var(--text-color);
            margin-bottom: 1.25rem;
            font-weight: 600;
        }

        .settings-section:hover {
            transform: scale(1.02);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .settings-section.highlight {
            animation: highlightSection 1s ease-out;
        }

        @keyframes highlightSection {
            0% {
                background-color: #934D1A;
            }
            100% {
                background-color: #ffffff;
            }
        }

        /* Profile Picture */
        .profile-picture {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 2rem;
        }

        .profile-picture img {
            width: 140px;
            height: 140px;
            border-radius: 50%;
            object-fit: cover;
            margin-bottom: 1.25rem;
            border: 3px solid var(--border-color);
            transition: transform 0.3s ease;
        }

        .profile-picture img:hover {
            transform: scale(1.1);
        }

        .file-upload-wrapper {
            position: relative;
            display: inline-block;
        }

        .custom-file-upload {
            display: inline-block;
            padding: 0.75rem 1.25rem;
            background-color: #934D1A;
            color: #ffffff;
            border-radius: 6px;
            cursor: pointer;
            font-size: 1rem;
            transition: background-color 0.3s ease, transform 0.2s ease;
            text-align: center;
            border: 1px solid #BE6C2A;
        }

        .custom-file-upload:hover {
            background-color: #BE6C2A;
            border-color: #BE6C2A;
            transform: translateY(-2px);
        }

        .file-upload-wrapper input[type="file"] {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
        }

        /* Form Styling */
        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 2rem;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            font-size: 1rem;
            color: var(--text-color);
            margin-bottom: 0.75rem;
            font-weight: 500;
        }

        .form-group input,
        .form-group select {
            padding: 1rem;
            border: 1px solid var(--border-color);
            border-radius: 6px;
            font-size: 1rem;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }

        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: #934D1A;
            box-shadow: 0 0 0 3px #BE6C2A;
        }

        .form-error {
            color: var(--error-color);
            font-size: 0.9rem;
            margin-top: 0.5rem;
        }

        .form-group button[type="submit"] {
            padding: 1rem 2rem;
            background-color: #934D1A;
            color: #ffffff;
            border: none;
            border-radius: 6px;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

        .form-group button[type="submit"]:hover {
            background-color: #BE6C2A;
            transform: translateY(-2px);
        }

        /* Password Toggle Icon */
        .password-container {
            position: relative;
            display: flex;
            align-items: center;
        }

        .password-container input {
            width: 100%;
            padding-right: 3rem; /* Space for the icon */
        }

        .password-toggle-icon {
            position: absolute;
            right: 1rem;
            cursor: pointer;
            color: var(--text-color);
            font-size: 1.2rem;
            transition: color 0.3s ease;
        }

        .password-toggle-icon:hover {
            color: #934D1A;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .settings-wrapper {
                flex-direction: column;
            }

            .sidebar {
                width: 100%;
                position: static;
                height: auto;
                box-shadow: none;
                border-bottom: 1px solid var(--border-color);
            }

            .main-content {
                margin-left: 0;
                padding: 1.5rem;
            }

            .form-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
    <!-- Include Font Awesome for eye icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
{% endblock %}

{% block body %}
    <div class="settings-wrapper">
        <!-- Sidebar -->
        <div class="sidebar">
            <h2>{{ 'settings'|trans }}</h2>
            <ul>
                {% set menu_items = [
                    'Back To Home',
                    'Account Information',
                    'Change Password',
                    'Langages',
                    'Help'
                ] %}
                {% for item in menu_items %}
                    <li style="--index: {{ loop.index }}"
                        {% if item == 'Change Password' %}class="active"{% endif %}
                        {% if item == 'Langages' %}class="language-menu"{% endif %}
                        {% if item == 'Help' %}class="help-item"{% endif %}>
                        {% if item == 'Home' %}
                            <a href="{{ path('app_home') }}">{{ item|trans }}</a>
                        {% elseif item == 'Langages' %}
                            <a href="#" class="language-toggle">{{ 'languages'|trans }}</a>
                            <div class="language-submenu">
                                <a href="{{ path('app_change_language', {locale: 'fr'}) }}">{{ 'french'|trans }}</a>
                                <a href="{{ path('app_change_language', {locale: 'en'}) }}">{{ 'english'|trans }}</a>
                            </div>
                        {% elseif item == 'Change Password' %}
                            <a href="#change-password" class="scroll-link">{{ item|trans }}</a>
                        {% elseif item == 'Account Information' %}
                            <a href="#account-information" class="scroll-link">{{ item|trans }}</a>
                        {% else %}
                            <a href="#">{{ item|trans }}</a>
                        {% endif %}
                    </li>
                {% endfor %}
            </ul>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            {# Translated Title #}
            <h1>{{ 'Account Information'|trans }}:</h1>

            {% for flash_message in app.flashes('success') %}
                <div class="alert-success">
                    {{ flash_message|trans }}
                </div>
            {% endfor %}
            {% for flash_message in app.flashes('error') %}
                <div class="alert-error">
                    {{ flash_message|trans }}
                </div>
            {% endfor %}

            <!-- Section 1: Basic Information -->
            <div class="settings-section" id="account-information" style="--index: 1">
                <h3>{{ 'your_account'|trans }}</h3>
                <div class="profile-picture">
                    {% if app.user.image %}
                        <img src="{{ asset('Uploads/images/' ~ app.user.image) }}" alt="{{ 'profile_picture'|trans }}">
                    {% else %}
                        <img src="https://www.bootdey.com/img/Content/avatar/avatar1.png" alt="{{ 'default_profile_picture'|trans }}">
                    {% endif %}
                    {{ form_start(imageForm, {'attr': {'id': 'imageForm', 'enctype': 'multipart/form-data'}}) }}
                    <div class="file-upload-wrapper">
                        <label for="imageForm_image" class="custom-file-upload">
                            {{ 'edit_profile_picture'|trans }}
                        </label>
                        {{ form_widget(imageForm.image, {'attr': {'id': 'imageForm_image', 'accept': 'image/*'}}) }}
                    </div>
                    {{ form_widget(imageForm.submit, {'attr': {'style': 'display: none;'}}) }}
                    {{ form_end(imageForm) }}
                </div>

                {{ form_start(form, {'attr': {'is_edit': true}}) }}
                <div class="form-grid">
                    <div class="form-group">
                        {{ form_label(form.nom, null, {'label': 'first_name'|trans}) }}
                        {{ form_widget(form.nom) }}
                        {% if form.nom.vars.errors|length > 0 %}
                            <div class="form-error">{{ form.nom.vars.errors[0].message|trans }}</div>
                        {% endif %}
                    </div>
                    <div class="form-group">
                        {{ form_label(form.prenom, null, {'label': 'last_name'|trans}) }}
                        {{ form_widget(form.prenom) }}
                        {% if form.prenom.vars.errors|length > 0 %}
                            <div class="form-error">{{ form.prenom.vars.errors[0].message|trans }}</div>
                        {% endif %}
                    </div>
                    <div class="form-group">
                        {{ form_label(form.dateOfBirth, null, {'label': 'date_of_birth'|trans}) }}
                        {{ form_widget(form.dateOfBirth) }}
                        {% if form.dateOfBirth.vars.errors|length > 0 %}
                            <div class="form-error">{{ form.dateOfBirth.vars.errors[0].message|trans }}</div>
                        {% endif %}
                    </div>
                    <div class="form-group">
                        {{ form_label(form.gender, null, {'label': 'gender'|trans}) }}
                        {{ form_widget(form.gender) }}
                        {% if form.gender.vars.errors|length > 0 %}
                            <div class="form-error">{{ form.gender.vars.errors[0].message|trans }}</div>
                        {% endif %}
                    </div>
                    <div class="form-group">
                        {{ form_label(form.email, null, {'label': 'email'|trans}) }}
                        {{ form_widget(form.email) }}
                        {% if form.email.vars.errors|length > 0 %}
                            <div class="form-error">{{ form.email.vars.errors[0].message|trans }}</div>
                        {% endif %}
                    </div>
                    <div class="form-group">
                        {{ form_label(form.cin, null, {'label': 'cin'|trans}) }}
                        {{ form_widget(form.cin) }}
                        {% if form.cin.vars.errors|length > 0 %}
                            <div class="form-error">{{ form.cin.vars.errors[0].message|trans }}</div>
                        {% endif %}
                    </div>
                    <div class="form-group">
                        {{ form_label(form.numTel, null, {'label': 'phone_number'|trans}) }}
                        {{ form_widget(form.numTel) }}
                        {% if form.numTel.vars.errors|length > 0 %}
                            <div class="form-error">{{ form.numTel.vars.errors[0].message|trans }}</div>
                        {% endif %}
                    </div>
                    <div class="form-group">
                        {{ form_label(form.adresse, null, {'label': 'address'|trans}) }}
                        {{ form_widget(form.adresse) }}
                        {% if form.adresse.vars.errors|length > 0 %}
                            <div class="form-error">{{ form.adresse.vars.errors[0].message|trans }}</div>
                        {% endif %}
                    </div>
                    <div class="form-group">
                        <label>{{ 'account_confirmed'|trans }}</label>
                        <p>{{ app.user.isConfirmed ? 'Oui' : 'Non' }}</p>
                    </div>
                </div>
            </div>

            <!-- Section 2: Security and Access -->
            <div class="settings-section" id="change-password" style="--index: 2">
                <h3>{{ 'Change password'|trans }}</h3>
                <div class="form-grid">
                    <div class="form-group">
                        {{ form_label(form.username, null, {'label': 'username'|trans}) }}
                        {{ form_widget(form.username) }}
                        {% if form.username.vars.errors|length > 0 %}
                            <div class="form-error">{{ form.username.vars.errors[0].message|trans }}</div>
                        {% endif %}
                    </div>
                    <div class="form-group">
                        {{ form_label(form.motDePasse, null, {'label': 'password'|trans}) }}
                        <div class="password-container">
                            {{ form_widget(form.motDePasse, {'attr': {'class': 'password-input'}}) }}
                            <i class="fas fa-eye password-toggle-icon" id="password-toggle"></i>
                        </div>
                        {% if form.motDePasse.vars.errors|length > 0 %}
                            <div class="form-error">{{ form.motDePasse.vars.errors[0].message|trans }}</div>
                        {% endif %}
                    </div>
                </div>
            </div>

            <div class="form-group">
                {{ form_widget(form.save, {'label': 'save_changes'|trans}) }}
            </div>

            {{ form_end(form) }}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Adjust sidebar height dynamically (not needed with fixed position, but kept for consistency)
            const sidebar = document.querySelector('.sidebar');
            const mainContent = document.querySelector('.main-content');
            if (sidebar && mainContent) {
                const adjustSidebarHeight = () => {
                    const mainHeight = mainContent.offsetHeight;
                    sidebar.style.minHeight = `${mainHeight}px`;
                };
                adjustSidebarHeight();
                window.addEventListener('resize', adjustSidebarHeight);
            }

            // Auto-submit profile picture form on file selection
            const imageInput = document.getElementById('imageForm_image');
            if (imageInput) {
                imageInput.addEventListener('change', function() {
                    if (this.files && this.files.length > 0) {
                        const imageForm = document.getElementById('imageForm');
                        if (imageForm) {
                            imageForm.submit();
                        }
                    }
                });
            }

            // Ensure file input click is not prevented
            const fileLabel = document.querySelector('.custom-file-upload');
            if (fileLabel) {
                fileLabel.addEventListener('click', function(e) {
                    const fileInput = document.getElementById('imageForm_image');
                    if (fileInput) {
                        fileInput.click();
                    }
                });
            }

            // Toggle language submenu and manage "Help" visibility
            const languageToggle = document.querySelector('.language-toggle');
            const languageSubmenu = document.querySelector('.language-submenu');
            const helpItem = document.querySelector('.help-item');

            if (languageToggle && languageSubmenu && helpItem) {
                languageToggle.addEventListener('click', function(e) {
                    e.preventDefault();
                    const isActive = languageSubmenu.classList.toggle('active');
                    if (isActive) {
                        helpItem.classList.add('hidden');
                    } else {
                        helpItem.classList.remove('hidden');
                    }
                });

                document.addEventListener('click', function(e) {
                    if (!languageToggle.contains(e.target) && !languageSubmenu.contains(e.target)) {
                        languageSubmenu.classList.remove('active');
                        helpItem.classList.remove('hidden');
                    }
                });
            }

            // Log language link clicks
            const englishLink = document.querySelector('a[href*="/change-language/en"]');
            if (englishLink) {
                englishLink.addEventListener('click', function(e) {
                    console.log('English link clicked, redirecting to: ' + this.href);
                });
            }

            const frenchLink = document.querySelector('a[href*="/change-language/fr"]');
            if (frenchLink) {
                frenchLink.addEventListener('click', function(e) {
                    console.log('French link clicked, redirecting to: ' + this.href);
                });
            }

            // Section hover animations
            const sections = document.querySelectorAll('.settings-section');
            sections.forEach(section => {
                section.addEventListener('mouseenter', function() {
                    this.style.transition = 'transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out';
                });
                section.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0) scale(1)';
                });
            });

            // Password toggle functionality
            const passwordInput = document.querySelector('.password-input');
            const passwordToggle = document.querySelector('#password-toggle');
            if (passwordInput && passwordToggle) {
                passwordToggle.addEventListener('click', function() {
                    const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                    passwordInput.setAttribute('type', type);
                    this.classList.toggle('fa-eye');
                    this.classList.toggle('fa-eye-slash');
                });
            }

            // Smooth scroll for section links and manage active state
            const scrollLinks = document.querySelectorAll('.scroll-link');
            scrollLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();

                    // Remove active class from all sidebar items
                    document.querySelectorAll('.sidebar li').forEach(item => {
                        item.classList.remove('active');
                    });

                    // Add active class to the clicked item's parent li
                    const parentLi = this.parentElement;
                    if (parentLi) {
                        parentLi.classList.add('active');
                    }

                    // Smooth scroll to the target section
                    const targetId = this.getAttribute('href').substring(1); // Remove '#'
                    const targetSection = document.getElementById(targetId);
                    if (targetSection) {
                        const offset = 100; // Adjust based on any fixed header height
                        const sectionPosition = targetSection.getBoundingClientRect().top + window.pageYOffset - offset;
                        window.scrollTo({
                            top: sectionPosition,
                            behavior: 'smooth'
                        });
                        // Add highlight animation
                        targetSection.classList.add('highlight');
                        setTimeout(() => {
                            targetSection.classList.remove('highlight');
                        }, 1000);
                    }
                });
            });
        });
    </script>
{% endblock %}