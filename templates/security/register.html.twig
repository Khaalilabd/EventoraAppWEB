{% extends 'base.html.twig' %}

{% block title %}{{ 'registration'|trans }}{% endblock %}

{% block body %}
    <video autoplay loop muted playsinline class="background-video">
        <source src="{{ asset('images/fireworks loop.mp4') }}" type="video/mp4">
        {{ 'browser_no_video'|trans({'default': 'Your browser does not support the video tag.'}) }}
    </video>
    <div class="flash-messages">
        {% for message in app.flashes('success') %}
            <div class="alert alert-success">
                {{ message }}
            </div>
        {% endfor %}
        {% for message in app.flashes('error') %}
            <div class="alert alert-danger">
                {{ message }}
            </div>
        {% endfor %}
    </div>

    <div class="container">
        <h1>{{ 'create_account'|trans }}</h1>
        {{ form_start(registration_form, {'attr': {'enctype': 'multipart/form-data'}}) }}
            <div class="form-columns">
                <div class="form-column">
                    {{ form_row(registration_form.nom) }}
                    {{ form_row(registration_form.prenom) }}
                    {{ form_row(registration_form.dateOfBirth, {
                        'attr': {
                            'type': 'date',
                            'min': '1900-01-01',
                            'max': '2030-01-01' 
                        } 
                    }) }}
                    {{ form_row(registration_form.gender) }}
                    {{ form_row(registration_form.email) }}
                </div>
                <div class="form-column">
                    {{ form_row(registration_form.cin) }}
                    {{ form_row(registration_form.numTel) }}
                    {{ form_row(registration_form.adresse) }}
                    {{ form_row(registration_form.username) }}
                </div>
            </div>
            <div class="password-container">
                <div class="password-wrapper">
                    {{ form_row(registration_form.motDePasse, {'attr': {'autocomplete': 'new-password', 'class': 'password-input'}}) }}
                    <span id="toggle-password" class="eye-icon">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                            <circle cx="12" cy="12" r="3"></circle>
                        </svg>
                    </span>
                </div>
                <button type="button" id="generate-password" class="btn-generate-password">{{ 'generate_password'|trans }}</button>
            </div>
            {{ form_row(registration_form.image, {'attr': {'accept': 'image/*'}}) }}
            <button type="submit">{{ 'sign_up'|trans }}</button>
        {{ form_end(registration_form) }}
        <a href="{{ path('app_auth') }}">{{ 'back_to_login'|trans }}</a>
    </div>

    <style>
        body {
            margin: 0;
            padding: 0;
            height: 100vh;
            overflow-x: hidden;
            background: none; /* Remove any default background */
        }
        .background-video {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover; /* Video covers the entire screen */
            z-index: -1; /* Place video behind all content */
        }
        .flash-messages {
            margin: 20px auto;
            max-width: 600px;
            position: relative;
            z-index: 1; /* Above the video */
        }
        .container {
            width: 800px;
            min-height: 600px;
            margin: 50px auto;
            padding: 20px;
            background-color: rgba(255, 255, 255, 0.9); /* Semi-transparent background for readability */
            border-radius: 10px;
            position: relative;
            z-index: 1; /* Above the video */
            box-sizing: border-box;
        }
        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 5px;
            text-align: center;
        }
        .alert-success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .password-container {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        .password-wrapper {
            position: relative;
            width: 100%;
        }
        .password-input {
            padding-right: 40px;
            width: 100%;
            box-sizing: border-box;
            border: 1px solid #b0c4de;
            border-radius: 4px;
            padding: 8px;
            background-color: #f0f8ff;
        }
        .password-input:focus {
            outline: none;
            border-color:rgb(208, 168, 119);
        }
        .eye-icon {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            background-color: #f0f8ff;
            padding: 2px;
        }
        .eye-icon svg {
            transition: stroke 0.3s;
        }
        .eye-icon:hover svg {
            stroke: #333;
        }
        .btn-generate-password {
            padding: 8px 12px;
            background-color: #rgb(208, 168, 119);
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .btn-generate-password:hover {
            background-color:rgb(208, 168, 119);
        }
        input[type="date"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #b0c4de;
            border-radius: 4px;
            background-color: #f0f8ff;
            box-sizing: border-box;
        }
        .form-control {
            width: 100%;
            padding: 8px;
            border: 1px solid #b0c4de;
            border-radius: 4px;
            background-color: #f0f8ff;
            box-sizing: border-box;
        }
        .form-control:focus {
            outline: none;
            border-color: rgb(208, 168, 119);
        }
        input[type="date"]:focus {
            outline: none;
            border-color: rgb(208, 168, 119)
        }
        input[type="date"]::-webkit-date-and-time-value {
            text-align: left;
        }
        a {
            display: block;
            margin-top: 20px;
            text-align: center;
            color:rgb(208, 168, 119);
            text-decoration: none;
        }
        a:hover {
            color: rgb(208, 168, 119);
        }
        button[type="submit"] {
            width: 100%;
            padding: 10px;
            background-color:rgb(208, 168, 119);
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-top: 20px;
        }
        button[type="submit"]:hover {
            background-color:rgb(208, 168, 119)
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const generateButton = document.getElementById('generate-password');
            const passwordField = document.getElementById('registration_form_motDePasse');
            const togglePassword = document.getElementById('toggle-password');

            if (!generateButton) {
                console.error('{{ "button_not_found"|trans }}');
                return;
            }

            if (!passwordField) {
                console.error('{{ "password_field_not_found"|trans }}');
                return;
            }

            if (!togglePassword) {
                console.error('{{ "toggle_password_not_found"|trans }}');
                return;
            }

            generateButton.addEventListener('click', async function() {
                try {
                    const response = await fetch('{{ path('api_generate_password') }}');
                    if (!response.ok) {
                        throw new Error('{{ "network_error"|trans }}' + response.status);
                    }
                    const data = await response.json();
                    passwordField.value = data.password;
                } catch (error) {
                    console.error('{{ "password_generation_error"|trans }}', error);
                    alert('{{ "password_generation_error_try_again"|trans }}');
                }
            });

            togglePassword.addEventListener('click', function() {
                const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordField.setAttribute('type', type);
                this.innerHTML = type === 'password' ?
                    `<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                        <circle cx="12" cy="12" r="3"></circle>
                    </svg>` :
                    `<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                        <circle cx="12" cy="12" r="3"></circle>
                        <line x1="1" y1="1" x2="23" y2="23"></line>
                    </svg>`;
            });
        });
    </script>
{% endblock %}